name: Accessibility Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  wcag-aaa-compliance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Start application
      run: npm run dev &
      env:
        NODE_ENV: test
    
    - name: Wait for application to start
      run: sleep 10
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Run WCAG AAA accessibility tests
      run: npm run test:accessibility
    
    - name: Run axe-core accessibility audit
      run: npx @axe-core/cli http://localhost:5000 --exit
    
    - name: Test keyboard navigation
      run: echo "⚠️ Keyboard navigation tests not configured - skipping"
    
    - name: Test screen reader compatibility
      run: echo "⚠️ Screen reader tests not configured - skipping"
    
    - name: Test color contrast ratios
      run: echo "⚠️ Color contrast tests not configured - skipping"
    
    - name: Upload accessibility report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: accessibility-report
        path: |
          test-results/
          accessibility-report.html

  multilingual-accessibility:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        language: [en, fr, ar, sw]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Start application
      run: npm run dev &
      env:
        NODE_ENV: test
    
    - name: Wait for application to start
      run: sleep 10
    
    - name: Test accessibility for ${{ matrix.language }} language
      run: npm run test:accessibility:lang -- --lang=${{ matrix.language }}
    
    - name: Test RTL support for Arabic
      if: matrix.language == 'ar'
      run: npm run test:rtl-accessibility
    
    - name: Test cultural keyboard shortcuts
      run: npm run test:cultural-shortcuts -- --lang=${{ matrix.language }}
    
    - name: Upload language-specific report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: accessibility-report-${{ matrix.language }}
        path: test-results/accessibility-${{ matrix.language }}/

  mobile-accessibility:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Start application
      run: npm run dev &
      env:
        NODE_ENV: test
    
    - name: Wait for application to start
      run: sleep 10
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Test mobile touch targets (44px minimum)
      run: npm run test:touch-targets
    
    - name: Test mobile screen reader navigation
      run: npm run test:mobile-screen-reader
    
    - name: Test mobile focus management
      run: npm run test:mobile-focus
    
    - name: Test voice control compatibility
      run: npm run test:voice-control
    
    - name: Upload mobile accessibility report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: mobile-accessibility-report
        path: test-results/mobile/

  accessibility-monitoring:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Start application
      run: npm run dev &
      env:
        NODE_ENV: production
    
    - name: Wait for application to start
      run: sleep 10
    
    - name: Run Lighthouse accessibility audit
      run: |
        npm install -g @lhci/cli
        lhci autorun --upload.target=temporary-public-storage
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    
    - name: Check accessibility regression
      run: npm run test:accessibility:regression
    
    - name: Post accessibility status to Slack
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: 'Accessibility tests failed! Please check the reports.'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}